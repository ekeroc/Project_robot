<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>All-in-one test and deployment job.</description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>30</daysToKeep>
    <numToKeep>30</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.jenkinsci.plugins.gitlablogo.GitlabLogoProperty plugin="gitlab-logo@1.0.1">
      <repositoryName>taas</repositoryName>
    </org.jenkinsci.plugins.gitlablogo.GitlabLogoProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.TextParameterDefinition>
          <name>BRANCH</name>
          <description></description>
          <defaultValue>feature/plugin</defaultValue>
        </hudson.model.TextParameterDefinition>
        <hudson.model.TextParameterDefinition>
          <name>DOCKER_COMPOSE_FILE</name>
          <description></description>
          <defaultValue>docker-compose.physical.yml</defaultValue>
        </hudson.model.TextParameterDefinition>
        <hudson.model.TextParameterDefinition>
          <name>DOCKER_TEST_COMPOSE_FILE</name>
          <description></description>
          <defaultValue>docker-compose.physical_test.yml</defaultValue>
        </hudson.model.TextParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>RESET_MAINDB_VOLUME</name>
          <description></description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@2.4.1">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>http://10.209.60.1:10080/taas/taas_nodejs.git</url>
        <credentialsId>dcac13a0-e89d-4dff-8a4b-835f0cbdddfc</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>refs/heads/${BRANCH}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.TimerTrigger>
      <spec>0 1,13 * * *</spec>
    </hudson.triggers.TimerTrigger>
    <com.dabsquared.gitlabjenkins.GitLabPushTrigger plugin="gitlab-plugin@1.1.28">
      <spec></spec>
      <triggerOnPush>true</triggerOnPush>
      <triggerOnMergeRequest>true</triggerOnMergeRequest>
      <triggerOpenMergeRequestOnPush>never</triggerOpenMergeRequestOnPush>
      <ciSkip>true</ciSkip>
      <setBuildDescription>true</setBuildDescription>
      <addNoteOnMergeRequest>true</addNoteOnMergeRequest>
      <addCiMessage>false</addCiMessage>
      <addVoteOnMergeRequest>true</addVoteOnMergeRequest>
      <allowAllBranches>false</allowAllBranches>
      <includeBranchesSpec></includeBranchesSpec>
      <excludeBranchesSpec></excludeBranchesSpec>
      <acceptMergeRequestOnSuccess>false</acceptMergeRequestOnSuccess>
    </com.dabsquared.gitlabjenkins.GitLabPushTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
echo ${WORKSPACE}
# test
set +x
echo &quot;====================&quot;
echo &quot;TEST &amp; COVERAGE&quot;
echo &quot;====================&quot;
set -x
cd &quot;${WORKSPACE}/deploy&quot;
if [ -f ${DOCKER_TEST_COMPOSE_FILE} ]; then    
    sudo docker-compose -f ${DOCKER_COMPOSE_FILE} stop
    sudo docker-compose -f ${DOCKER_TEST_COMPOSE_FILE} stop
    sudo docker-compose -f ${DOCKER_TEST_COMPOSE_FILE} rm -f -v
    sudo docker-compose -f ${DOCKER_TEST_COMPOSE_FILE} build
    # don&apos;t run this in detached mode, so that Jenkins will wait until all the tests are done
    sudo docker-compose -f ${DOCKER_TEST_COMPOSE_FILE} run --service-ports --rm taas_web_test npm run-script covcheck
    # db container is not removed in the last command
    sudo docker-compose -f ${DOCKER_TEST_COMPOSE_FILE} stop
    sudo docker-compose -f ${DOCKER_TEST_COMPOSE_FILE} rm -f -v
fi

# deployment
set +x
echo &quot;====================&quot;
echo &quot;DEPLOYMENT&quot;
echo &quot;====================&quot;
set -x
cd &quot;${WORKSPACE}/deploy&quot;
sudo docker-compose -f ${DOCKER_COMPOSE_FILE} stop
if [ ${RESET_MAINDB_VOLUME} == true ]; then
    sudo docker-compose -f ${DOCKER_COMPOSE_FILE} rm -f -v
    sudo rm -rf ../volumes
else
    sudo docker-compose -f ${DOCKER_COMPOSE_FILE} rm -f
fi
sudo docker-compose -f ${DOCKER_COMPOSE_FILE} build
sudo docker-compose -f ${DOCKER_COMPOSE_FILE} up -d</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.Mailer plugin="mailer@1.16">
      <recipients></recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>true</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper plugin="ansicolor@0.4.2">
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
  </buildWrappers>
</project>