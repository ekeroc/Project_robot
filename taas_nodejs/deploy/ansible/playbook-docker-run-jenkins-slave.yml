- hosts: docker-host-slave
  roles:
      - include_taas_vars
      - { role: docker_on_openstack, become: True }
      - ansible_docker
  vars:
      # docker_registry_url
      image_prefix: taas_slave_
      container_prefix: taas_slave_
      container_suffix: ""
      additional_labels: ""
      disable_client_uuid: True
      delete_existing_clients: True
      force_pull: False
      force_recreate: False
      force_restart: False
      slave_name_to_run: base
      version_to_run: latest
      jenkins_master: http://10.206.20.5:8080/
      jenkins_username: ""
      jenkins_password: ""
  tasks:
      - name: set image src as localhost
        set_fact:
            image_src: "{{ image_prefix }}{{ slave_name_to_run }}:{{ version_to_run }}"

      - name: set image src as registry
        set_fact:
            image_src: "{{ docker_registry_url }}/{{ image_src }}"
        when: docker_registry_url | default('') != ''

      - name: ensure slave container is running
        become: True
        docker_container:
            name: "{{ container_prefix }}{{ slave_name_to_run }}{{ container_suffix }}"
            image: "{{ image_src }}"
            restart_policy: always
            detach: True
            capabilities: SYS_ADMIN
            command: >
                -description "TaaS testing slave"
                -executors 1
                -fsroot "/usr/src/jenkins_home"
                -labels "taas {{ slave_name_to_run }} {{ version_to_run }} {{ additional_labels }}"
                -mode normal
                -name "{{ container_prefix }}{{ slave_name_to_run }}{{ container_suffix }}"
                -master "{{ jenkins_master }}"
                {{ (jenkins_username == "") | ternary('', '-username ' ~ jenkins_username) }}
                {{ (jenkins_password == "") | ternary('', '-password ' ~ jenkins_password) }}
                {{ disable_client_uuid | ternary('-disableClientsUniqueId','') }}
                {{ delete_existing_clients | ternary('-deleteExistingClients','') }}
            state: started
            pull: "{{ force_pull }}"
            restart: "{{ force_restart }}"
            recreate: "{{ force_recreate }}"

