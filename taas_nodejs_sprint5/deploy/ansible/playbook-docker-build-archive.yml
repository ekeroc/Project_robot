- hosts: docker-build-server
  roles:
      - include_taas_vars
      - { role: docker_on_openstack, become: True }
      - ansible_docker
  vars:
      # docker_registry_url: set this variable to enable pushing images to a registry
      api_docker_image: "{{ core_services.archive_api.image.name }}" 
      api_docker_dir: "{{ ansible_env.HOME }}/docker_archive_api"
      api_docker_file: Dockerfile.archive_api_server
      http_docker_image: "{{ core_services.archive_http.image.name }}" 
      http_docker_dir: "{{ ansible_env.HOME }}/docker_archive_http"
      http_docker_file: Dockerfile.archive_http_server
      force_rebuild_api: False
      force_rebuild_http: False
  tasks:
      - name: set docker registry
        set_fact:
            docker_registry_url: "{{ docker_registry_url | default('') }}"

      - name: ensure docker build directories exist
        file:
            path: "{{ item }}"
            state: directory
        with_items:
            - "{{ api_docker_dir }}"
            - "{{ http_docker_dir }}"

      - name: transfer api src files to remote host
        copy: >
            src={{ playbook_dir }}/../archive/{{ item }}
            dest={{ api_docker_dir }}/{{ item }}
            force=yes mode='0444'
        with_items:
            - package.json
            - listFiles.js

      - name: transfer api docker file to remote host
        copy:
            src: "{{ playbook_dir }}/../docker/{{ api_docker_file }}"
            dest: "{{ api_docker_dir}}/{{ api_docker_file }}"
            mode: 0444
            force: yes

      - name: transfer http docker file to remote host
        copy:
            src: "{{ playbook_dir }}/../docker/{{ http_docker_file }}"
            dest: "{{ http_docker_dir}}/{{ http_docker_file }}"
            mode: 0444
            force: yes

      - name: build and push api docker image
        become: True
        docker_image:
            path: "{{ api_docker_dir }}"
            dockerfile: "{{ api_docker_file }}"
            name: "{{ docker_registry_url }}{{ (docker_registry_url == '') | ternary('','/')}}{{ api_docker_image}}"
            push: "{{ (docker_registry_url == '') | ternary('no', 'yes') }}"
            tls: False
            state: present
            force: "{{ force_rebuild_api }}"
        tags:
            - skip_me

      - name: build and push http docker image
        become: True
        docker_image:
            path: "{{ http_docker_dir }}"
            dockerfile: "{{ http_docker_file }}"
            name: "{{ docker_registry_url }}{{ (docker_registry_url == '') | ternary('','/')}}{{ http_docker_image}}"
            push: "{{ (docker_registry_url == '') | ternary('no', 'yes') }}"
            tls: False
            state: present
            force: "{{ force_rebuild_http }}"
        tags:
            - skip_me

